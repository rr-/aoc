#!/usr/bin/env python3
import re
import sys
import typing as T
from pathlib import Path


def part1(depth: int, target: T.Tuple[int, int]) -> int:
    grid: T.Dict[T.Tuple[int, int], int] = {}
    for y in range(target[1] + 1):
        for x in range(target[0] + 1):
            if y == 0:
                grid[x, y] = ((16807 * x) + depth) % 20183
            elif x == 0:
                grid[x, y] = ((48271 * y) + depth) % 20183
            else:
                grid[x, y] = (
                    (grid[x - 1, y] * grid[x, y - 1]) + depth
                ) % 20183
    grid[target] = depth % 20183
    grid[0, 0] = depth % 20183
    return sum([x % 3 for x in grid.values()])


def main() -> None:
    text = Path(__file__).with_name("input.txt").read_text()
    depth, target_x, target_y = map(int, re.findall(r"\d+", text))

    print(part1(depth, (target_x, target_y)))


if __name__ == "__main__":
    main()
