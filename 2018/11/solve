#!/usr/bin/env python3
import typing as T
from pathlib import Path


def measure(x: int, y: int, serial: int) -> int:
    rack_id = x + 10
    val = (rack_id * y + serial) * rack_id
    val = (val % 1000) // 100
    val -= 5
    return val


def part1(serial: int) -> T.Tuple[int, int]:
    size = 300
    grid = {
        (x, y): measure(x, y, serial)
        for x in range(1, size + 1)
        for y in range(1, size + 1)
    }
    best_value = 0
    best_x = 0
    best_y = 0
    for x in range(1, size + 1 - 2):
        for y in range(1, size + 1 - 2):
            value = 0
            for dx in range(3):
                for dy in range(3):
                    value += grid[x + dx, y + dy]
            if value > best_value:
                best_x = x
                best_y = y
                best_value = value
    return best_x, best_y


def main() -> None:
    serial = int(Path(__file__).with_name("input.txt").read_text())

    x, y = part1(serial)
    print(f"{x},{y}")


if __name__ == "__main__":
    main()
