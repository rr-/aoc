#!/usr/bin/env python3
from pathlib import Path


def read_grid(lines):
    return {
        (x, y): line[x] == "#"
        for y, line in enumerate(lines)
        for x in range(len(line))
    }


def simulate(grid, rounds):
    width = max(x for x, y in grid.keys()) + 1
    height = max(y for x, y in grid.keys()) + 1
    for _ in range(rounds):
        new_grid = {}
        for y in range(height):
            for x in range(width):
                neighbours = sum(
                    grid.get((x + x2, y + y2), 0)
                    for x2 in (-1, 0, 1)
                    for y2 in (-1, 0, 1)
                    if x2 != 0 or y2 != 0
                )
                if grid[x, y]:
                    new_grid[x, y] = neighbours in {2, 3}
                else:
                    new_grid[x, y] = neighbours == 3
        grid = new_grid
    return grid


def part1(lines):
    grid = read_grid(lines)
    grid = simulate(grid, 100)
    return len([val for val in grid.values() if val])


if __name__ == "__main__":
    with Path(__file__).with_name("input.txt").open() as handle:
        lines = list(map(str.rstrip, handle))
    print(part1(lines))
